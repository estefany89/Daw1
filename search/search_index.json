{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ENTORNO DE DESARROLLO CICLO DE VIDA DEL SOFTWARE CONTROL DE VERSIONES ENTORNOS INTEGRADOS HERRAMIENTAS DE DESARROLLO KANBAN LENGUAJE DE PROGRAMACI\u00d3N OPTIMIZACI\u00d3N","title":"inicio"},{"location":"#entorno-de-desarrollo","text":"CICLO DE VIDA DEL SOFTWARE CONTROL DE VERSIONES ENTORNOS INTEGRADOS HERRAMIENTAS DE DESARROLLO KANBAN LENGUAJE DE PROGRAMACI\u00d3N OPTIMIZACI\u00d3N","title":"ENTORNO DE DESARROLLO"},{"location":"CICLO%20DE%20VIDA%20DEL%20SOFTWARE/","text":"CICLO DE VIDA DEL SOFTWARE 1) Define \"Ciclo de vida del software\". El ciclo de vida del desarrollo de software es la estructura que contiene los procesos, actividades y tareas relacionadas con el desarrollo y mantenimiento de un producto de software, abarcando la vida completa del sistema, desde la definici\u00f3n de los requisitos hasta la finalizaci\u00f3n de su uso. Este sistema de desarrollo, necesita de varios pasos imprescindibles para garantizar que los programas ofrezcan una buena experiencia al usuario, seguridad, eficiencia, estabilidad y fiabilidad de uso. 2) Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas. 1. An\u00e1lisis de los requisitos Establece las bases del software que comenzaremos a desarrollar donde especifican detalladamente en un documento los requisitos que marca el cliente que debe tener el resultado final. La empresa encargada de desarrollarlo tambi\u00e9n deber\u00e1 ayudarle a tener una visi\u00f3n completa del software, as\u00ed como aclararle algunas dudas o ideas que pueda tener el cliente y que puedan parecer en un principio incompletas. En esta etapa, la comunicaci\u00f3n entre la empresa y el cliente es esencial para cerrar las pautas que se deben cumplir. Igualmente, la creaci\u00f3n de este documento puede ayudar a la empresa a establecer plazos de entrega o costes. Es importante resaltar que para el correcto proceso de desarrollo de software, este documento debe estar cerrado, sin implementar nuevas pautas a mitad del proceso de desarrollo que puedan retrasar el trabajo. 2. Dise\u00f1o del sistema En esta siguiente fase debemos trazar una estructura interna del software. Para ello, descomponemos y organizamos el sistema en diferentes elementos que puedan elaborarse por separado. Se trata de un documento en el que se describe la estructura relacional global del sistema, as\u00ed como una especificaci\u00f3n de cu\u00e1l es la funci\u00f3n de cada una de sus partes o c\u00f3mo combinan entre ellas. 3. Implementaci\u00f3n En la etapa de implementaci\u00f3n del proceso de desarrollo de software , traducimos el dise\u00f1o anterior al c\u00f3digo. Se programan los requisitos que se han especificado anteriormente, realizando los algoritmos necesarios. 4. Verificaci\u00f3n Consiste en comprobar que cada uno de los aspectos del software responde correctamente a las tareas, cumpliendo as\u00ed con los requisitos de la primera etapa. Tambi\u00e9n nos ayuda a obtener informaci\u00f3n, as\u00ed como a encontrar defectos, refinar el c\u00f3digo, constatar que no existen errores o si podemos aumentar la calidad del software. 5. Mantenimiento Y llegamos a la \u00faltima etapa del proceso de desarrollo de software. Una vez est\u00e1n listas cada una de las funcionalidades del producto y hemos comprobado que cada una funciona correctamente, instalamos la aplicaci\u00f3n y verificamos que su funcionamiento sea correcto en el entorno en que va a ser utilizado 3) Explica brevemente en qu\u00e9 consiste el modelo en cascada cuando hablamos de desarrollo de software. El modelo en cascada es una metodolog\u00eda secuencial para la gesti\u00f3n de proyectos que se divide en fases. Cada fase comienza reci\u00e9n cuando ha terminado la anterior. En este art\u00edculo se explican las fases de la gesti\u00f3n de proyectos en cascada y lo \u00fatil que puede ser para que tu equipo alcance los objetivos. 4) Ventajas e inconvenientes del modelo en cascada. Ventajas -Los costes y la carga de trabajo se pueden estimar al comenzar el proyecto. -Aquellos proyectos que se estructuran en base al modelo en cascada se pueden representar cronol\u00f3gicamente de forma sencilla. Inconvenientes -El usuario final no se integra en el proceso de producci\u00f3n hasta que no termina la programaci\u00f3n. -En ocasiones, los fallos solo se detectan una vez finalizado el proceso de desarrollo. 5\u00bfQu\u00e9 se entiende por verificaci\u00f3n? \u00bfY por validaci\u00f3n? La verificaci\u00f3n se lleva a cabo en la fase de desarrollo, comprobando y corrigiendo los procesos, mientras que la validaci\u00f3n se realiza despu\u00e9s de que el producto ha sido desarrollado repasando el funcionamiento. 6 Explica como funciona el modelo de desarrollo mediante creaci\u00f3n de prototipos. El modelo de prototipos se centra en un dise\u00f1o r\u00e1pido que representa las caracter\u00edsticas principales del programa que el usuario podr\u00e1 ver o utilizar. De esta manera pueden probarlo y dar su opini\u00f3n sobre distintos aspectos como la usabilidad, la utilidad o el rendimiento, entre otras.","title":"TEMA"},{"location":"CICLO%20DE%20VIDA%20DEL%20SOFTWARE/#ciclo-de-vida-del-software","text":"1) Define \"Ciclo de vida del software\". El ciclo de vida del desarrollo de software es la estructura que contiene los procesos, actividades y tareas relacionadas con el desarrollo y mantenimiento de un producto de software, abarcando la vida completa del sistema, desde la definici\u00f3n de los requisitos hasta la finalizaci\u00f3n de su uso. Este sistema de desarrollo, necesita de varios pasos imprescindibles para garantizar que los programas ofrezcan una buena experiencia al usuario, seguridad, eficiencia, estabilidad y fiabilidad de uso. 2) Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas. 1. An\u00e1lisis de los requisitos Establece las bases del software que comenzaremos a desarrollar donde especifican detalladamente en un documento los requisitos que marca el cliente que debe tener el resultado final. La empresa encargada de desarrollarlo tambi\u00e9n deber\u00e1 ayudarle a tener una visi\u00f3n completa del software, as\u00ed como aclararle algunas dudas o ideas que pueda tener el cliente y que puedan parecer en un principio incompletas. En esta etapa, la comunicaci\u00f3n entre la empresa y el cliente es esencial para cerrar las pautas que se deben cumplir. Igualmente, la creaci\u00f3n de este documento puede ayudar a la empresa a establecer plazos de entrega o costes. Es importante resaltar que para el correcto proceso de desarrollo de software, este documento debe estar cerrado, sin implementar nuevas pautas a mitad del proceso de desarrollo que puedan retrasar el trabajo. 2. Dise\u00f1o del sistema En esta siguiente fase debemos trazar una estructura interna del software. Para ello, descomponemos y organizamos el sistema en diferentes elementos que puedan elaborarse por separado. Se trata de un documento en el que se describe la estructura relacional global del sistema, as\u00ed como una especificaci\u00f3n de cu\u00e1l es la funci\u00f3n de cada una de sus partes o c\u00f3mo combinan entre ellas. 3. Implementaci\u00f3n En la etapa de implementaci\u00f3n del proceso de desarrollo de software , traducimos el dise\u00f1o anterior al c\u00f3digo. Se programan los requisitos que se han especificado anteriormente, realizando los algoritmos necesarios. 4. Verificaci\u00f3n Consiste en comprobar que cada uno de los aspectos del software responde correctamente a las tareas, cumpliendo as\u00ed con los requisitos de la primera etapa. Tambi\u00e9n nos ayuda a obtener informaci\u00f3n, as\u00ed como a encontrar defectos, refinar el c\u00f3digo, constatar que no existen errores o si podemos aumentar la calidad del software. 5. Mantenimiento Y llegamos a la \u00faltima etapa del proceso de desarrollo de software. Una vez est\u00e1n listas cada una de las funcionalidades del producto y hemos comprobado que cada una funciona correctamente, instalamos la aplicaci\u00f3n y verificamos que su funcionamiento sea correcto en el entorno en que va a ser utilizado 3) Explica brevemente en qu\u00e9 consiste el modelo en cascada cuando hablamos de desarrollo de software. El modelo en cascada es una metodolog\u00eda secuencial para la gesti\u00f3n de proyectos que se divide en fases. Cada fase comienza reci\u00e9n cuando ha terminado la anterior. En este art\u00edculo se explican las fases de la gesti\u00f3n de proyectos en cascada y lo \u00fatil que puede ser para que tu equipo alcance los objetivos. 4) Ventajas e inconvenientes del modelo en cascada. Ventajas -Los costes y la carga de trabajo se pueden estimar al comenzar el proyecto. -Aquellos proyectos que se estructuran en base al modelo en cascada se pueden representar cronol\u00f3gicamente de forma sencilla. Inconvenientes -El usuario final no se integra en el proceso de producci\u00f3n hasta que no termina la programaci\u00f3n. -En ocasiones, los fallos solo se detectan una vez finalizado el proceso de desarrollo. 5\u00bfQu\u00e9 se entiende por verificaci\u00f3n? \u00bfY por validaci\u00f3n? La verificaci\u00f3n se lleva a cabo en la fase de desarrollo, comprobando y corrigiendo los procesos, mientras que la validaci\u00f3n se realiza despu\u00e9s de que el producto ha sido desarrollado repasando el funcionamiento. 6 Explica como funciona el modelo de desarrollo mediante creaci\u00f3n de prototipos. El modelo de prototipos se centra en un dise\u00f1o r\u00e1pido que representa las caracter\u00edsticas principales del programa que el usuario podr\u00e1 ver o utilizar. De esta manera pueden probarlo y dar su opini\u00f3n sobre distintos aspectos como la usabilidad, la utilidad o el rendimiento, entre otras.","title":"CICLO DE VIDA DEL SOFTWARE"},{"location":"CONTROL%20DE%20VERSIONES/","text":"Control de versiones 1). Adem\u00e1s de Git, \u00bfque otros sistemas de control de versiones existen? CVS, Subversion, SourceSafe, ClearCase, Darcs, Bazaar, Plastic SCM, Git, SCCS, Mercurial, Perforce, Fossil SCM, Team Foundation Server. 2). En Git, \u00bfqu\u00e9 tres \u00e1reas existen? El directorio de Git (Git directory), el directorio de trabajo (working directory), y el \u00e1rea de preparaci\u00f3n (staging area). 3). Busca en Internet un buen tutorial de GIT y real\u00edzalo. \u00bfDe qu\u00e9 tutorial se trata? https://www.youtube.com/watch?v=VdGzPZ31ts8 Aprende GIT ahora! curso completo GRATIS desde cero 4). Visualiza el siguiente video y responde a las cuestiones que aparecen m\u00e1s abajo. https://www.youtube.com/watch?v=uR6G2v_WsRA 5). En Git, \u00bfpara qu\u00e9 sirve el comando git config ? El comando git config es una funci\u00f3n \u00fatil que sirve para definir valores de configuraci\u00f3n de Git a nivel de un proyecto global o local. 6). En Git, \u00bfpara qu\u00e9 sirve el comando git init ? Inicializa un directorio existente como un repositorio Gif 7). En Git, \u00bfpara qu\u00e9 sirve el comando git clone ? recuperar un repositorio completo desde una URL de ubicaci\u00f3n alojada 8). En Git, \u00bfpara qu\u00e9 sirve el comando git status ? Mostrar archivos modificados en el directorio de trabajo, preparados para su pr\u00f3xima confirmaci\u00f3n 9). En Git, \u00bfpara qu\u00e9 sirve el comando git add ? Agrega un archivo como se ve ahora para su pr\u00f3xima confirmaci\u00f3n (etapa) 10). En Git, \u00bfpara qu\u00e9 sirve el comando git commit ? Sirve para confirmar una instant\u00e1nea del directorio del entorno de ensayo en el historial de confirmaciones de los repositorios. 11). En Git, \u00bfpara qu\u00e9 sirve el comando git log ? Mostrar todas las confirmaciones en el historial de la sucursal actual. 12). En Git, \u00bfpara qu\u00e9 sirve el comando git reset HEAD nombrearchivo ? Es un comando potente que sirve para deshacer los cambios locales en el estado de un repositorio de Git 13). En Git, \u00bfpara qu\u00e9 sirve el comando git checkout -- nombrearchivo ? Te permite desplazarte entre las ramas creadas por git branch. 14). Visualiza el siguiente video y responde a las cuestiones que aparecen m\u00e1s abajo. https://www.youtube.com/watch?v=FyAAIHHClqI 15). En Git, \u00bfpara qu\u00e9 sirve el comando git branch ? Te permite crear, enumerar y eliminar ramas, as\u00ed como cambiar su nombre. 16). En Git, \u00bfpara qu\u00e9 sirve el comando git checkout ? Cambia a otra sucursal y lo comprueba en tu directorio de trabajo 17).En Git, \u00bfpara qu\u00e9 sirve el comando git merge ? Fusiona el historial de la rama especificada en el actual. 18). En Git, explica c\u00f3mo funciona la fusi\u00f3n (merge) de tipo fast-forward. Fast Forward en Git Marge, permite armonizar la rama `master`de un proyecto con los cambios realizados en una rama *`feature`*. 19). En Git, explica c\u00f3mo funciona la fusi\u00f3n (merge) de tipo 3-way. Git identifica estas tres confirmaciones mediante instant\u00e1neas. Git compara el ancestro com\u00fan con cada una de las confirmaciones de punta. La fusi\u00f3n de 3-way funciona: -El ancestro com\u00fan. -La punta de la rama Master. -La punta de la rama de funciones.","title":"TEMA"},{"location":"CONTROL%20DE%20VERSIONES/#control-de-versiones","text":"1). Adem\u00e1s de Git, \u00bfque otros sistemas de control de versiones existen? CVS, Subversion, SourceSafe, ClearCase, Darcs, Bazaar, Plastic SCM, Git, SCCS, Mercurial, Perforce, Fossil SCM, Team Foundation Server. 2). En Git, \u00bfqu\u00e9 tres \u00e1reas existen? El directorio de Git (Git directory), el directorio de trabajo (working directory), y el \u00e1rea de preparaci\u00f3n (staging area). 3). Busca en Internet un buen tutorial de GIT y real\u00edzalo. \u00bfDe qu\u00e9 tutorial se trata? https://www.youtube.com/watch?v=VdGzPZ31ts8 Aprende GIT ahora! curso completo GRATIS desde cero 4). Visualiza el siguiente video y responde a las cuestiones que aparecen m\u00e1s abajo. https://www.youtube.com/watch?v=uR6G2v_WsRA 5). En Git, \u00bfpara qu\u00e9 sirve el comando git config ? El comando git config es una funci\u00f3n \u00fatil que sirve para definir valores de configuraci\u00f3n de Git a nivel de un proyecto global o local. 6). En Git, \u00bfpara qu\u00e9 sirve el comando git init ? Inicializa un directorio existente como un repositorio Gif 7). En Git, \u00bfpara qu\u00e9 sirve el comando git clone ? recuperar un repositorio completo desde una URL de ubicaci\u00f3n alojada 8). En Git, \u00bfpara qu\u00e9 sirve el comando git status ? Mostrar archivos modificados en el directorio de trabajo, preparados para su pr\u00f3xima confirmaci\u00f3n 9). En Git, \u00bfpara qu\u00e9 sirve el comando git add ? Agrega un archivo como se ve ahora para su pr\u00f3xima confirmaci\u00f3n (etapa) 10). En Git, \u00bfpara qu\u00e9 sirve el comando git commit ? Sirve para confirmar una instant\u00e1nea del directorio del entorno de ensayo en el historial de confirmaciones de los repositorios. 11). En Git, \u00bfpara qu\u00e9 sirve el comando git log ? Mostrar todas las confirmaciones en el historial de la sucursal actual. 12). En Git, \u00bfpara qu\u00e9 sirve el comando git reset HEAD nombrearchivo ? Es un comando potente que sirve para deshacer los cambios locales en el estado de un repositorio de Git 13). En Git, \u00bfpara qu\u00e9 sirve el comando git checkout -- nombrearchivo ? Te permite desplazarte entre las ramas creadas por git branch. 14). Visualiza el siguiente video y responde a las cuestiones que aparecen m\u00e1s abajo. https://www.youtube.com/watch?v=FyAAIHHClqI 15). En Git, \u00bfpara qu\u00e9 sirve el comando git branch ? Te permite crear, enumerar y eliminar ramas, as\u00ed como cambiar su nombre. 16). En Git, \u00bfpara qu\u00e9 sirve el comando git checkout ? Cambia a otra sucursal y lo comprueba en tu directorio de trabajo 17).En Git, \u00bfpara qu\u00e9 sirve el comando git merge ? Fusiona el historial de la rama especificada en el actual. 18). En Git, explica c\u00f3mo funciona la fusi\u00f3n (merge) de tipo fast-forward. Fast Forward en Git Marge, permite armonizar la rama `master`de un proyecto con los cambios realizados en una rama *`feature`*. 19). En Git, explica c\u00f3mo funciona la fusi\u00f3n (merge) de tipo 3-way. Git identifica estas tres confirmaciones mediante instant\u00e1neas. Git compara el ancestro com\u00fan con cada una de las confirmaciones de punta. La fusi\u00f3n de 3-way funciona: -El ancestro com\u00fan. -La punta de la rama Master. -La punta de la rama de funciones.","title":"Control de versiones"},{"location":"ENTORNOS%20INTEGRADOS/","text":"Entornos desarrollo integrado Instala el editor sublime text. Saca una captura de pantalla una vez instalado. Personaliza Sublime text instalando los complementos m\u00e1s importantes. BracketHighlighter HTML5 Terminal JavaScriptNext ES6 PackageDev Emmet SideBarEnhancements HTML-CSS-JS Prettify Color Highlighter \u00bfPara que sirve el complemento Emmet ? Haz uso de \u00e9l al escribir un archivo html de prueba. Emmet es un conjunto de complementos para editores de texto que permiten la codificaci\u00f3n y edici\u00f3n de alta velocidad en HTML, XML, XSL y otros formatos de c\u00f3digo estructurado a trav\u00e9s de la asistencia de contenido. Emmet, escribe c\u00f3digo HTML y CSS a base de abreviaciones. Para los desarrolladores de p\u00e1ginas web, que trabajan con archivos http, no es suficiente un editor de texto simple, se requiere en concreto para el frontend, Emmet da una vuelta de tuerca m\u00e1s para hacerte altamente productivo, se trata de un plugin que a base de escribir peque\u00f1as abreviaciones genera grandes estructuras de c\u00f3digo HTML y CSS. <DOCTYPE html> <html lang=\"zxx\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>EJEMPLO-ESTEFANY - texto</title> </head> <body> <h1>EJEMPLO EMMET</h1> <h2>Desarrollo del software</h2> <p>El desarrollo de software se refiere a un conjunto de actividades inform\u00e1ticas dedicadas al proceso de creaci\u00f3n, dise\u00f1o, despliegue y compatibilidad de software. El software en s\u00ed es el conjunto de instrucciones o programas que le dicen a una computadora qu\u00e9 hacer.. </p> <h2>Lenguaje de maquina</h2> <p>Tambi\u00e9n conocido como c\u00f3digo m\u00e1quina, se trata del lenguaje que pueden ejecutar los ordenadores y otros sistemas de computaci\u00f3n mas informaci\u00f3n al siguiente correo<span class=\"correo\">info@local.com</span></p> <h2>Compilador</h2> <p>Un compilador es un programa inform\u00e1tico que traduce todo el c\u00f3digo fuente de un proyecto de software a c\u00f3digo m\u00e1quina antes de ejecutarlo. Solo entonces el procesador ejecuta el software, obteniendo todas las instrucciones en c\u00f3digo m\u00e1quina antes de comenzar.</p> <h2>prueba</h2> <p class=\"destacar\">Lorem ipsum, <strong>dolor sit amet</strong> consectetur adipisicing elit. Corporis facere eius, expedita omnis reprehenderit, culpa laboriosam at reiciendis repellat cupiditate <em>suscipit officiis minus</em> est adipisci, ex perferendis. Dignissimos, sequi voluptatum?</p> <!--Abreviacion emmet tama\u00f1o imagen--> <img src=\"figuras/pensando.jpg\" alt=\"mu\u00f1eco sobre rat\u00f3n pensando\" width=\"225\" height=\"225\"> </body> </html> Instala el editor Visual Studio Code. Saca una captura de pantalla una vez instalado y funcionando. Haz una comparativa de la funcionalidad ofrecida por Sublime text y la ofrecida por Visual Studio Code referente a los siguientes aspectos: \u00bfQu\u00e9 paquetes b\u00e1sicos debemos instalar en Ubuntu para desarrollar en Java? Paquete sun-java5-jdk Open JDK Instala el entorno integrado Netbeans. Saca una captura de pantalla una vez instalado y funcionando. Crea un proyecto en Java en Netbeans. Realiza su compilaci\u00f3n y ejecuci\u00f3n. \u00bfQu\u00e9 sistema de construcci\u00f3n utiliza Netbeans para generar los archivos \"ejecutables\"? Mira en el directorio ra\u00edz del proyecto y examina qu\u00e9 buildfile utiliza de los vistos en el tema. Sistemas ejecutables. - Gradel - Maiven Plugin: Pregunta EXTRA!!! (no viene en la relacion) Instala el plugin \"NB Mind Map\" en Netbeans, asocia un mapa mental al proyecto.","title":"TEMA"},{"location":"ENTORNOS%20INTEGRADOS/#entornos-desarrollo-integrado","text":"Instala el editor sublime text. Saca una captura de pantalla una vez instalado. Personaliza Sublime text instalando los complementos m\u00e1s importantes. BracketHighlighter HTML5 Terminal JavaScriptNext ES6 PackageDev Emmet SideBarEnhancements HTML-CSS-JS Prettify Color Highlighter \u00bfPara que sirve el complemento Emmet ? Haz uso de \u00e9l al escribir un archivo html de prueba. Emmet es un conjunto de complementos para editores de texto que permiten la codificaci\u00f3n y edici\u00f3n de alta velocidad en HTML, XML, XSL y otros formatos de c\u00f3digo estructurado a trav\u00e9s de la asistencia de contenido. Emmet, escribe c\u00f3digo HTML y CSS a base de abreviaciones. Para los desarrolladores de p\u00e1ginas web, que trabajan con archivos http, no es suficiente un editor de texto simple, se requiere en concreto para el frontend, Emmet da una vuelta de tuerca m\u00e1s para hacerte altamente productivo, se trata de un plugin que a base de escribir peque\u00f1as abreviaciones genera grandes estructuras de c\u00f3digo HTML y CSS. <DOCTYPE html> <html lang=\"zxx\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>EJEMPLO-ESTEFANY - texto</title> </head> <body> <h1>EJEMPLO EMMET</h1> <h2>Desarrollo del software</h2> <p>El desarrollo de software se refiere a un conjunto de actividades inform\u00e1ticas dedicadas al proceso de creaci\u00f3n, dise\u00f1o, despliegue y compatibilidad de software. El software en s\u00ed es el conjunto de instrucciones o programas que le dicen a una computadora qu\u00e9 hacer.. </p> <h2>Lenguaje de maquina</h2> <p>Tambi\u00e9n conocido como c\u00f3digo m\u00e1quina, se trata del lenguaje que pueden ejecutar los ordenadores y otros sistemas de computaci\u00f3n mas informaci\u00f3n al siguiente correo<span class=\"correo\">info@local.com</span></p> <h2>Compilador</h2> <p>Un compilador es un programa inform\u00e1tico que traduce todo el c\u00f3digo fuente de un proyecto de software a c\u00f3digo m\u00e1quina antes de ejecutarlo. Solo entonces el procesador ejecuta el software, obteniendo todas las instrucciones en c\u00f3digo m\u00e1quina antes de comenzar.</p> <h2>prueba</h2> <p class=\"destacar\">Lorem ipsum, <strong>dolor sit amet</strong> consectetur adipisicing elit. Corporis facere eius, expedita omnis reprehenderit, culpa laboriosam at reiciendis repellat cupiditate <em>suscipit officiis minus</em> est adipisci, ex perferendis. Dignissimos, sequi voluptatum?</p> <!--Abreviacion emmet tama\u00f1o imagen--> <img src=\"figuras/pensando.jpg\" alt=\"mu\u00f1eco sobre rat\u00f3n pensando\" width=\"225\" height=\"225\"> </body> </html> Instala el editor Visual Studio Code. Saca una captura de pantalla una vez instalado y funcionando. Haz una comparativa de la funcionalidad ofrecida por Sublime text y la ofrecida por Visual Studio Code referente a los siguientes aspectos: \u00bfQu\u00e9 paquetes b\u00e1sicos debemos instalar en Ubuntu para desarrollar en Java? Paquete sun-java5-jdk Open JDK Instala el entorno integrado Netbeans. Saca una captura de pantalla una vez instalado y funcionando. Crea un proyecto en Java en Netbeans. Realiza su compilaci\u00f3n y ejecuci\u00f3n. \u00bfQu\u00e9 sistema de construcci\u00f3n utiliza Netbeans para generar los archivos \"ejecutables\"? Mira en el directorio ra\u00edz del proyecto y examina qu\u00e9 buildfile utiliza de los vistos en el tema. Sistemas ejecutables. - Gradel - Maiven Plugin: Pregunta EXTRA!!! (no viene en la relacion) Instala el plugin \"NB Mind Map\" en Netbeans, asocia un mapa mental al proyecto.","title":"Entornos desarrollo integrado"},{"location":"HERRAMIENTAS%20DE%20DESARROLLO/","text":"Herramientas de desarrollo Ejecuta el programa \"Hola mundo\" en los siguientes lenguajes: bash echo \"Hola Mundo\" python print \"Hola Mundo\" javascript (nodejs) console.log('Hola mundo'); c ``` #include int main() { printf(\"\u00a1Hola, mundo!\"); return 0; } ``` java class Hola { public static void main(String[] args) { System.out.println(\"Hola Mundo\"); } } 2.Para cada uno de los lenguajes anteriores, indica el proceso realizado para conseguir ejecutar el c\u00f3digo: \u00bfcompilaci\u00f3n o interpretaci\u00f3n? Bash: es un lenguaje interpretado hecho en linux Python: este es tambien un lenguaje interpretado Javascript: es un lenguaje js interpretado C: compilado y ejecutado en linux Java: compilado e interpretado en linux Ensamblador: compilado 3.Para cada uno de los lenguajes anteriores, indica el nombre del compilador o interprete utilizado en GNU/Linux. Bash: terminal Python: Vs code Javascript: RunJS C: Terminal Java: terminal 4.Investiga y averigua que extensi\u00f3n tienen los archivos de c\u00f3digo fuente de los siguientes lenguajes: bash: . sh python: py. php: .php javascript: .js c : .c c++: .cpp java: .java ensamblador: .asm ruby: .rb go: .go rust: .rs lisp: .lisp \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de c\u00f3digo objeto? (.obj) o extensi\u00f3n. o Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes: Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores: Contiene el ejercicio 7 y8 Bibliotecas. Define que se entiende por biblioteca o librer\u00eda y los tipos que existen. En inform\u00e1tica, una biblioteca o, llamada por vicio del lenguaje, librer\u00eda (del ingl\u00e9s library ) es un conjunto de implementaciones funcionales, codificadas en un lenguaje de programaci\u00f3n , que ofrece una interfaz bien definida para la funcionalidad que se invoca. Tipos: Librer\u00edas est\u00e1ticas Estas se graban en un programa como ejecutables. Sirven exclusivamente para esto; despu\u00e9s, podemos borrarlas sin problemas, ya que el programa seguir\u00e1 funcionando con la funci\u00f3n necesaria. Librer\u00edas din\u00e1micas Son distintas a las est\u00e1ticas en tanto en cuanto no se copian en el programa al compilarlas. Las subrutinas son cargadas en tiempo de ejecuci\u00f3n, en vez de enlazarse en tiempo de compilaci\u00f3n. Bibliotecas. \u00bfQu\u00e9 tipo es el m\u00e1s utilizado actualmente? \u00bfPor qu\u00e9? Din\u00e1mica porque utilizan recursos independientes al ejecutable que las llama Bibliotecas. Crea una biblioteca din\u00e1mica en C que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. gcc -c -fPIC aritmetica.c gcc -shared -fPIC -o libaritmetica.so aritmetica.o cp libaritmetica.so /lib Bibliotecas. Crea una biblioteca din\u00e1mica en Java que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. mkdir aritmetica javac aritmetica/Aritmetica.java jar cvf aritmetica.jar aritmetica/*.class mv aritmetica.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/aritm.jar Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas est\u00e1ticas. ventaja: No es necesario proporcionar las bibliotecas correspondientes al publicar el programa. La velocidad de carga del c\u00f3digo es r\u00e1pida y la velocidad de ejecuci\u00f3n es ligeramente m\u00e1s r\u00e1pida que la biblioteca de enlaces din\u00e1micos Desventaja La biblioteca est\u00e1 empaquetada en la aplicaci\u00f3n, lo que resulta en una gran biblioteca. La biblioteca ha cambiado y es necesario volver a compilar el programa. Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas din\u00e1micas. Ventaja: Ahorra m\u00e1s memoria y reduce el intercambio de p\u00e1ginas. Los programas escritos en diferentes lenguajes de programaci\u00f3n pueden llamar a la misma para que funcionen siempre que sigan la convenci\u00f3n de llamada de funci\u00f3n. Adecuado para el desarrollo de software a gran escala, lo que hace que el proceso de desarrollo sea independiente y menos acoplado, lo que es conveniente para el desarrollo y las pruebas entre diferentes desarrolladores y organizaciones de desarrollo. Desventaja: El archivo ejecutable generado por el enlace est\u00e1tico es de gran tama\u00f1o y contiene el mismo c\u00f3digo com\u00fan, lo que causa desperdicio La aplicaci\u00f3n que usa la biblioteca de enlaces din\u00e1micos no es aut\u00f3noma, y el m\u00f3dulo del que depende tambi\u00e9n debe existir. Si usa enlaces din\u00e1micos al cargar, la DLL no existe cuando se inicia el programa. El sistema terminar\u00e1 el programa y dar\u00e1 un mensaje de error. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo ejecutable para c\u00f3digo fuente en C con make. Haz uso de un buildfile. ``` make gcc -O -c main.c gcc -O -c -fPIC aritmetica.c gcc -O -shared -fPIC -o libaritmetica.so aritmetica.o gcc -O -Wl,-rpath=/usr/local/lib main.o libaritmetica.so -o programa ```","title":"TEMA"},{"location":"HERRAMIENTAS%20DE%20DESARROLLO/#herramientas-de-desarrollo","text":"Ejecuta el programa \"Hola mundo\" en los siguientes lenguajes: bash echo \"Hola Mundo\" python print \"Hola Mundo\" javascript (nodejs) console.log('Hola mundo'); c ``` #include int main() { printf(\"\u00a1Hola, mundo!\"); return 0; } ``` java class Hola { public static void main(String[] args) { System.out.println(\"Hola Mundo\"); } } 2.Para cada uno de los lenguajes anteriores, indica el proceso realizado para conseguir ejecutar el c\u00f3digo: \u00bfcompilaci\u00f3n o interpretaci\u00f3n? Bash: es un lenguaje interpretado hecho en linux Python: este es tambien un lenguaje interpretado Javascript: es un lenguaje js interpretado C: compilado y ejecutado en linux Java: compilado e interpretado en linux Ensamblador: compilado 3.Para cada uno de los lenguajes anteriores, indica el nombre del compilador o interprete utilizado en GNU/Linux. Bash: terminal Python: Vs code Javascript: RunJS C: Terminal Java: terminal 4.Investiga y averigua que extensi\u00f3n tienen los archivos de c\u00f3digo fuente de los siguientes lenguajes: bash: . sh python: py. php: .php javascript: .js c : .c c++: .cpp java: .java ensamblador: .asm ruby: .rb go: .go rust: .rs lisp: .lisp \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de c\u00f3digo objeto? (.obj) o extensi\u00f3n. o Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes: Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores: Contiene el ejercicio 7 y8 Bibliotecas. Define que se entiende por biblioteca o librer\u00eda y los tipos que existen. En inform\u00e1tica, una biblioteca o, llamada por vicio del lenguaje, librer\u00eda (del ingl\u00e9s library ) es un conjunto de implementaciones funcionales, codificadas en un lenguaje de programaci\u00f3n , que ofrece una interfaz bien definida para la funcionalidad que se invoca. Tipos: Librer\u00edas est\u00e1ticas Estas se graban en un programa como ejecutables. Sirven exclusivamente para esto; despu\u00e9s, podemos borrarlas sin problemas, ya que el programa seguir\u00e1 funcionando con la funci\u00f3n necesaria. Librer\u00edas din\u00e1micas Son distintas a las est\u00e1ticas en tanto en cuanto no se copian en el programa al compilarlas. Las subrutinas son cargadas en tiempo de ejecuci\u00f3n, en vez de enlazarse en tiempo de compilaci\u00f3n. Bibliotecas. \u00bfQu\u00e9 tipo es el m\u00e1s utilizado actualmente? \u00bfPor qu\u00e9? Din\u00e1mica porque utilizan recursos independientes al ejecutable que las llama Bibliotecas. Crea una biblioteca din\u00e1mica en C que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. gcc -c -fPIC aritmetica.c gcc -shared -fPIC -o libaritmetica.so aritmetica.o cp libaritmetica.so /lib Bibliotecas. Crea una biblioteca din\u00e1mica en Java que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. mkdir aritmetica javac aritmetica/Aritmetica.java jar cvf aritmetica.jar aritmetica/*.class mv aritmetica.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/aritm.jar Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas est\u00e1ticas. ventaja: No es necesario proporcionar las bibliotecas correspondientes al publicar el programa. La velocidad de carga del c\u00f3digo es r\u00e1pida y la velocidad de ejecuci\u00f3n es ligeramente m\u00e1s r\u00e1pida que la biblioteca de enlaces din\u00e1micos Desventaja La biblioteca est\u00e1 empaquetada en la aplicaci\u00f3n, lo que resulta en una gran biblioteca. La biblioteca ha cambiado y es necesario volver a compilar el programa. Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas din\u00e1micas. Ventaja: Ahorra m\u00e1s memoria y reduce el intercambio de p\u00e1ginas. Los programas escritos en diferentes lenguajes de programaci\u00f3n pueden llamar a la misma para que funcionen siempre que sigan la convenci\u00f3n de llamada de funci\u00f3n. Adecuado para el desarrollo de software a gran escala, lo que hace que el proceso de desarrollo sea independiente y menos acoplado, lo que es conveniente para el desarrollo y las pruebas entre diferentes desarrolladores y organizaciones de desarrollo. Desventaja: El archivo ejecutable generado por el enlace est\u00e1tico es de gran tama\u00f1o y contiene el mismo c\u00f3digo com\u00fan, lo que causa desperdicio La aplicaci\u00f3n que usa la biblioteca de enlaces din\u00e1micos no es aut\u00f3noma, y el m\u00f3dulo del que depende tambi\u00e9n debe existir. Si usa enlaces din\u00e1micos al cargar, la DLL no existe cuando se inicia el programa. El sistema terminar\u00e1 el programa y dar\u00e1 un mensaje de error. Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo ejecutable para c\u00f3digo fuente en C con make. Haz uso de un buildfile. ``` make gcc -O -c main.c gcc -O -c -fPIC aritmetica.c gcc -O -shared -fPIC -o libaritmetica.so aritmetica.o gcc -O -Wl,-rpath=/usr/local/lib main.o libaritmetica.so -o programa ```","title":"Herramientas de desarrollo"},{"location":"KANBAN/","text":"KANBAN-SCRUM 1) KANBAN. Haz un resumen de la metodolog\u00eda Kanban e indica sus diferencias frente a SCRUM. Puedes consultar el siguiente enlace: La metodolog\u00eda Kanban consiste b\u00e1sicamente en gestionar un proyecto de una manera general. Su implementaci\u00f3n es ir mejorando continuamente el proceso, que se realiza siempre mediante flujos de trabajo visual que ayudan a limitar el trabajo en curso y maximizar la eficiencia De esta forma, en un proyecto, cuando un producto es retirado de su lugar de almacenamiento, el sistema Kanban env\u00eda una se\u00f1al a la parte inicial de la l\u00ednea de fabricaci\u00f3n o montaje, con la finalidad de que se comience a crear un nuevo producto. Scrum Kanban Cadencia Sprints de longitud fija peri\u00f3dicos (por ejemplo, dos semanas) Flujo continuo Metodolog\u00eda de publicaci\u00f3n Al final de cada sprint, si lo aprueba el propietario del producto Entrega continua o a discreci\u00f3n del equipo Funciones Propietario del producto, experto en scrum, equipo de desarrollo No existen funciones. Algunos equipos cuentan con la ayuda de un orientador \u00e1gil. M\u00e9tricas clave Velocidad Tiempo del ciclo Filosof\u00eda de cambios Los equipos deben evitar cambios en la previsi\u00f3n durante el sprint. De lo contrario, se sacrifica el aprendizaje sobre la estimaci\u00f3n. Los cambios pueden suceder en cualquier momento. 2) SCRUM. Explica como funciona Scrum. Scrum es un proceso en el que se aplican de manera regular un conjunto de buenas pr\u00e1cticas para trabajar colaborativamente, en equipo, y obtener el mejor resultado posible de un proyecto. Scrum est\u00e1 especialmente indicado para proyectos en entornos complejos, donde se necesita obtener resultados pronto, donde los requisitos son cambiantes o poco definidos, donde la innovaci\u00f3n, la competitividad, la flexibilidad y la productividad son fundamentales a su vez para resolver situaciones en que no se est\u00e1 entregando al cliente lo que necesita, cuando las entregas se alargan demasiado, los costes se disparan o la calidad no es aceptable, cuando se necesita capacidad de reacci\u00f3n ante la competencia, cuando la moral de los equipos es baja y la rotaci\u00f3n alta, cuando es necesario identificar y solucionar ineficiencias sistem\u00e1ticamente o cuando se quiere trabajar utilizando un proceso especializado en el desarrollo de producto. 3) SCRUM. Define los siguientes t\u00e9rminos: Product backlog. (pila de producto) es un listado de todas las tareas que se pretenden hacer durante el desarrollo de un proyecto. Sprint backlog. es una lista de tareas identificadas por el scrum team; \u00e9sta deber\u00e1 ser completada durante cada sprint. 4) SCRUM. En la terminolog\u00eda Scrum qu\u00e9 terminos se utilizan como sin\u00f3nimo de: Jefe de proyecto. = Scrum master Cliente. Product owner Equipo de desarrollo. Scrum team 5) SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum. Cultura de empresa basada en trabajo en equipo, para la mejora continua. Compromiso del cliente Compromiso de la Direcci\u00f3n en la organizaci\u00f3n para resolver problemas end\u00e9micos y realizar cambios organizativos. Compromiso conjunto y colaboraci\u00f3n de los miembros del equipo. Relaci\u00f3n entre proveedor y cliente basada en ganar-ganar, colaboraci\u00f3n y transparencia. Facilidad para realizar cambios en el proyecto. Equipo trabajando en un mismo espacio com\u00fan para maximizar la comunicaci\u00f3n. Dedicaci\u00f3n del equipo a tiempo completo Estabilidad de los miembros del equipo] 6) XP. Explica los 5 valores de la Programaci\u00f3n Extrema. Comunicaci\u00f3n.- promueve que los requisitos sean comunicados y trabajados con el equipo de desarrollo mano a mano y no a trav\u00e9s de documentaci\u00f3n Simplicidad.- enfatiza mucho en poner el foco en codificar las necesidades de hoy y buscar soluciones Feedback.- comunicaci\u00f3n, y no solo con el cliente, sino en todas direcciones Coraje. - un conjunto de pr\u00e1cticas que se compensan entre ellas y deben cumplirla todas, lo cual no es f\u00e1cil. Respeto .- respeto por el trabajo de los dem\u00e1s y, sobre todo, respeto hacia uno mismo y tu trabajo. 7) XP. \u00bfCu\u00e1les son las caracter\u00edsticas distintivas de XP frente a otras metodolog\u00edas \u00e1giles? Expl\u00edcalas. El juego de la planificaci\u00f3n Es un permanente di\u00e1logo entre las partes empresarial deseable y t\u00e9cnica posible. Peque\u00f1as entregas cada versi\u00f3n debe de ser tan peque\u00f1a como fuera posible, conteniendo los requisitos de negocios m\u00e1s importantes Met\u00e1fora Una met\u00e1fora es una historia que todo el mundo puede contar a cerca de c\u00f3mo funciona el sistema. Dise\u00f1o sencillo preparar nuestro sistema para que en un futuro acepte nuevos cambios y pueda albergar nuevas caracter\u00edsticas. No debemos de recodificar ante especulaciones si no solo cuando el sistema te lo pida. Pruebas No debe existir ninguna caracter\u00edstica en el programa que no haya sido probada, los programadores escriben pruebas para chequear el correcto funcionamiento del programa, los clientes realizan pruebas funcionales. Refactorizaci\u00f3n Cuando implementamos nuevas caracter\u00edsticas en nuestros programas nos planteamos la manera de hacerlo lo mas simple posible, despu\u00e9s de implementar esta caracter\u00edstica, nos preguntamos como hacer el programa mas simple sin perder funcionalidad, este proceso se le denomina recodificar o refactorizar. Programaci\u00f3n por parejas Todo el c\u00f3digo de producci\u00f3n lo escriben dos personas frente al ordenador, con un s\u00f3lo rat\u00f3n y un s\u00f3lo teclado. Propiedad colectiva Cualquiera que crea que puede aportar valor al c\u00f3digo en cualquier parcela puede hacerlo, ning\u00fan miembro del equipo es propietario del c\u00f3digo. Si alguien quiere hacer cambios en el c\u00f3digo puede hacerlo. Integraci\u00f3n continua El c\u00f3digo se debe integrar como m\u00ednimo una vez al d\u00eda, y realizar las pruebas sobre la totalidad del sistema hasta que estas funcionen al 100%. 40 horas semanales Si queremos estar frescos y motivados cada ma\u00f1ana y cansado y satisfecho cada noche. Cliente en casa el cliente real debe sentarse con el equipo de programadores, estar disponible para responder a sus preguntas, resolver discusiones y fijar las prioridades. Est\u00e1ndares de codificaci\u00f3n si los programadores van a estar tocando partes distintas del sistema, intercambiando compa\u00f1eros, haciendo refactoring, debemos de establecer un [est\u00e1ndar de codificaci\u00f3n aceptado e implantado por todo el equipo.","title":"TEMA"},{"location":"KANBAN/#kanban-scrum","text":"","title":"KANBAN-SCRUM"},{"location":"KANBAN/#1-kanban-haz-un-resumen-de-la-metodologia-kanban-e-indica-sus-diferencias-frente-a-scrum-puedes-consultar-el-siguiente-enlace","text":"La metodolog\u00eda Kanban consiste b\u00e1sicamente en gestionar un proyecto de una manera general. Su implementaci\u00f3n es ir mejorando continuamente el proceso, que se realiza siempre mediante flujos de trabajo visual que ayudan a limitar el trabajo en curso y maximizar la eficiencia De esta forma, en un proyecto, cuando un producto es retirado de su lugar de almacenamiento, el sistema Kanban env\u00eda una se\u00f1al a la parte inicial de la l\u00ednea de fabricaci\u00f3n o montaje, con la finalidad de que se comience a crear un nuevo producto. Scrum Kanban Cadencia Sprints de longitud fija peri\u00f3dicos (por ejemplo, dos semanas) Flujo continuo Metodolog\u00eda de publicaci\u00f3n Al final de cada sprint, si lo aprueba el propietario del producto Entrega continua o a discreci\u00f3n del equipo Funciones Propietario del producto, experto en scrum, equipo de desarrollo No existen funciones. Algunos equipos cuentan con la ayuda de un orientador \u00e1gil. M\u00e9tricas clave Velocidad Tiempo del ciclo Filosof\u00eda de cambios Los equipos deben evitar cambios en la previsi\u00f3n durante el sprint. De lo contrario, se sacrifica el aprendizaje sobre la estimaci\u00f3n. Los cambios pueden suceder en cualquier momento.","title":"1) KANBAN. Haz un resumen de la metodolog\u00eda Kanban e indica sus diferencias frente a SCRUM. Puedes consultar el siguiente enlace:"},{"location":"KANBAN/#2-scrum-explica-como-funciona-scrum","text":"Scrum es un proceso en el que se aplican de manera regular un conjunto de buenas pr\u00e1cticas para trabajar colaborativamente, en equipo, y obtener el mejor resultado posible de un proyecto. Scrum est\u00e1 especialmente indicado para proyectos en entornos complejos, donde se necesita obtener resultados pronto, donde los requisitos son cambiantes o poco definidos, donde la innovaci\u00f3n, la competitividad, la flexibilidad y la productividad son fundamentales a su vez para resolver situaciones en que no se est\u00e1 entregando al cliente lo que necesita, cuando las entregas se alargan demasiado, los costes se disparan o la calidad no es aceptable, cuando se necesita capacidad de reacci\u00f3n ante la competencia, cuando la moral de los equipos es baja y la rotaci\u00f3n alta, cuando es necesario identificar y solucionar ineficiencias sistem\u00e1ticamente o cuando se quiere trabajar utilizando un proceso especializado en el desarrollo de producto.","title":"2) SCRUM. Explica como funciona Scrum."},{"location":"KANBAN/#3-scrum-define-los-siguientes-terminos","text":"Product backlog. (pila de producto) es un listado de todas las tareas que se pretenden hacer durante el desarrollo de un proyecto. Sprint backlog. es una lista de tareas identificadas por el scrum team; \u00e9sta deber\u00e1 ser completada durante cada sprint.","title":"3) SCRUM. Define los siguientes t\u00e9rminos:"},{"location":"KANBAN/#4-scrum-en-la-terminologia-scrum-que-terminos-se-utilizan-como-sinonimo-de","text":"Jefe de proyecto. = Scrum master Cliente. Product owner Equipo de desarrollo. Scrum team","title":"4) SCRUM. En la terminolog\u00eda Scrum qu\u00e9 terminos se utilizan como sin\u00f3nimo de:"},{"location":"KANBAN/#5-scrum-haz-un-resumen-de-los-requisitos-para-poder-utilizar-scrum","text":"Cultura de empresa basada en trabajo en equipo, para la mejora continua. Compromiso del cliente Compromiso de la Direcci\u00f3n en la organizaci\u00f3n para resolver problemas end\u00e9micos y realizar cambios organizativos. Compromiso conjunto y colaboraci\u00f3n de los miembros del equipo. Relaci\u00f3n entre proveedor y cliente basada en ganar-ganar, colaboraci\u00f3n y transparencia. Facilidad para realizar cambios en el proyecto. Equipo trabajando en un mismo espacio com\u00fan para maximizar la comunicaci\u00f3n. Dedicaci\u00f3n del equipo a tiempo completo Estabilidad de los miembros del equipo]","title":"5) SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum."},{"location":"KANBAN/#_1","text":"","title":""},{"location":"KANBAN/#6-xp-explica-los-5-valores-de-la-programacion-extrema","text":"Comunicaci\u00f3n.- promueve que los requisitos sean comunicados y trabajados con el equipo de desarrollo mano a mano y no a trav\u00e9s de documentaci\u00f3n Simplicidad.- enfatiza mucho en poner el foco en codificar las necesidades de hoy y buscar soluciones Feedback.- comunicaci\u00f3n, y no solo con el cliente, sino en todas direcciones Coraje. - un conjunto de pr\u00e1cticas que se compensan entre ellas y deben cumplirla todas, lo cual no es f\u00e1cil. Respeto .- respeto por el trabajo de los dem\u00e1s y, sobre todo, respeto hacia uno mismo y tu trabajo.","title":"6) XP. Explica los 5 valores de la Programaci\u00f3n Extrema."},{"location":"KANBAN/#7-xp-cuales-son-las-caracteristicas-distintivas-de-xp-frente-a-otras-metodologias-agiles-explicalas","text":"El juego de la planificaci\u00f3n Es un permanente di\u00e1logo entre las partes empresarial deseable y t\u00e9cnica posible. Peque\u00f1as entregas cada versi\u00f3n debe de ser tan peque\u00f1a como fuera posible, conteniendo los requisitos de negocios m\u00e1s importantes Met\u00e1fora Una met\u00e1fora es una historia que todo el mundo puede contar a cerca de c\u00f3mo funciona el sistema. Dise\u00f1o sencillo preparar nuestro sistema para que en un futuro acepte nuevos cambios y pueda albergar nuevas caracter\u00edsticas. No debemos de recodificar ante especulaciones si no solo cuando el sistema te lo pida. Pruebas No debe existir ninguna caracter\u00edstica en el programa que no haya sido probada, los programadores escriben pruebas para chequear el correcto funcionamiento del programa, los clientes realizan pruebas funcionales. Refactorizaci\u00f3n Cuando implementamos nuevas caracter\u00edsticas en nuestros programas nos planteamos la manera de hacerlo lo mas simple posible, despu\u00e9s de implementar esta caracter\u00edstica, nos preguntamos como hacer el programa mas simple sin perder funcionalidad, este proceso se le denomina recodificar o refactorizar. Programaci\u00f3n por parejas Todo el c\u00f3digo de producci\u00f3n lo escriben dos personas frente al ordenador, con un s\u00f3lo rat\u00f3n y un s\u00f3lo teclado. Propiedad colectiva Cualquiera que crea que puede aportar valor al c\u00f3digo en cualquier parcela puede hacerlo, ning\u00fan miembro del equipo es propietario del c\u00f3digo. Si alguien quiere hacer cambios en el c\u00f3digo puede hacerlo. Integraci\u00f3n continua El c\u00f3digo se debe integrar como m\u00ednimo una vez al d\u00eda, y realizar las pruebas sobre la totalidad del sistema hasta que estas funcionen al 100%. 40 horas semanales Si queremos estar frescos y motivados cada ma\u00f1ana y cansado y satisfecho cada noche. Cliente en casa el cliente real debe sentarse con el equipo de programadores, estar disponible para responder a sus preguntas, resolver discusiones y fijar las prioridades. Est\u00e1ndares de codificaci\u00f3n si los programadores van a estar tocando partes distintas del sistema, intercambiando compa\u00f1eros, haciendo refactoring, debemos de establecer un [est\u00e1ndar de codificaci\u00f3n aceptado e implantado por todo el equipo.","title":"7) XP. \u00bfCu\u00e1les son las caracter\u00edsticas distintivas de XP frente a otras  metodolog\u00edas \u00e1giles? Expl\u00edcalas."},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/","text":"LENGUAJES DE PROGRAMACI\u00d3N \u00bfQu\u00e9 diferencia existe entre los lenguajes declarativos y los imperativos?. Nombra al menos 2 de cada tipo. Declarativos En esto, los programas especifican lo que se debe hacer. Simplemente expresa la l\u00f3gica de la computaci\u00f3n. Su objetivo principal es describir el resultado deseado sin un dictado directo sobre c\u00f3mo obtenerlo. Su tipo incluye programaci\u00f3n l\u00f3gica y programaci\u00f3n funcional. En esto, un compilador puede tomar decisiones. Imperativos En este, los programas especifican c\u00f3mo se debe hacer. Simplemente describe el flujo de control de la computaci\u00f3n. Su principal objetivo es describir c\u00f3mo conseguirlo o lograrlo. En esto, el usuario puede tomar decisiones y ordenar al compilador. Brinda control total a los desarrolladores que son muy importantes en la programaci\u00f3n de bajo nivel. \u00bfExplica qu\u00e9 es compilar? \u00bfExplica qu\u00e9 es interpretar? Compilado es aquel que tiene que traducirse al lenguaje de la m\u00e1quina para poder enviar las instrucciones que ella va a ejecutar, mientras que el interpretado se env\u00eda directamente a la computadora. Ventajas de los lenguajes compilados. Se utilizan cuando la eficiencia es la principal preocupaci\u00f3n El c\u00f3digo ejecutable obtenido es m\u00e1s eficiente y r\u00e1pido Son unidades aut\u00f3nomas listas para ser ejecutadas Ventajas de los lenguajes interpretados. El int\u00e9rprete suele estar en varios sistemas operativos, as\u00ed que no tienes que adaptar tu c\u00f3digo a una plataforma en concreto. El c\u00f3digo fuente se interpreta directamente y puede llevarse a diferentes plataformas Esto es una ventaja medias, pero si que lo vemos en entornos web. Los lenguajes interpretados como JavaScript, se ejecutan en el navegador cliente, lo que hace disminuir la carga de trabajo del servidor web. Nombra 2 lenguajes compilados y otros 2 interpretados. Compilados C++ Cleo Interpretados JavaScript Python \u00bfPuede considerarse c\u00f3digo objeto el bytecode generado en Java tras la compilaci\u00f3n? Explica la respuesta. Puede considerarse c\u00f3digo objeto pero destinado a la m\u00e1quina virtual de Java en lugar de c\u00f3digo objeto nativo, despu\u00e9s este bytecode se interpreta para ejecutarlo. Pon un ejemplo de lenguaje de los siguientes tipos: Bajo nivel. Lenguaje de m\u00e1quina Lenguaje ensamblador Nivel medio. C Alto nivel. SQL PHP Python Java Go \u00bfQu\u00e9 paradigma de programaci\u00f3n siguen los siguientes lenguajes? C: Imperactivo estructurado C++: Imperactivo multiparadigma SQL: Declarativos algebraicos Java: Imperactivos orientado a objeto Javascript: Imperactivo multiparadigma Lisp: Declarativos funcionales Prolog: Declarativos l\u00f3gicos Explica qu\u00e9 criterios pueden seguirse a la hora de elegir un lengua de de programaci\u00f3n para el desarrollo software. Aplicaci\u00f3n . Si te gusta el desarrollo de juegos, aplicaciones m\u00f3viles o sitios web, los lenguajes que necesitas aprender son totalmente diferentes, algo muy obvio, puesto que los lenguajes de programaci\u00f3n se crean con un prop\u00f3sito en espec\u00edfico. Salario. Existen varios lenguajes por los cuales pagan muy buenos salarios anuales. Por desgracias, por algunos no sucede lo mismo. Sera decisi\u00f3n tuya ver por cual te decantas y que disfrutes trabajar con ese. Geograf\u00eda. Este el tercer criterio que se debe tomar en cuenta al momento de elegir un lenguaje de programaci\u00f3n, ayuda a determinar que tantas personas utilizan ese lenguaje y que en alg\u00fan momento te pueden ayudar, o puedes tomarlo tambi\u00e9n como una oportunidad para destacar en un lenguaje que no sea com\u00fan en esa regi\u00f3n. Popularidad. Este aspecto resulta importantes cuando quieres trabajar como Freelancer. Un lenguaje de programaci\u00f3n tiene que ser suficientemente popular para generar nuevo proyectos en los que puedas trabajar.","title":"TEMA"},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#lenguajes-de-programacion","text":"","title":"LENGUAJES DE PROGRAMACI\u00d3N"},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#que-diferencia-existe-entre-los-lenguajes-declarativos-y-los-imperativos-nombra-al-menos-2-de-cada-tipo","text":"Declarativos En esto, los programas especifican lo que se debe hacer. Simplemente expresa la l\u00f3gica de la computaci\u00f3n. Su objetivo principal es describir el resultado deseado sin un dictado directo sobre c\u00f3mo obtenerlo. Su tipo incluye programaci\u00f3n l\u00f3gica y programaci\u00f3n funcional. En esto, un compilador puede tomar decisiones. Imperativos En este, los programas especifican c\u00f3mo se debe hacer. Simplemente describe el flujo de control de la computaci\u00f3n. Su principal objetivo es describir c\u00f3mo conseguirlo o lograrlo. En esto, el usuario puede tomar decisiones y ordenar al compilador. Brinda control total a los desarrolladores que son muy importantes en la programaci\u00f3n de bajo nivel.","title":"\u00bfQu\u00e9 diferencia existe entre los lenguajes declarativos y los imperativos?. Nombra al menos 2 de cada tipo."},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#explica-que-es-compilar-explica-que-es-interpretar","text":"Compilado es aquel que tiene que traducirse al lenguaje de la m\u00e1quina para poder enviar las instrucciones que ella va a ejecutar, mientras que el interpretado se env\u00eda directamente a la computadora.","title":"\u00bfExplica qu\u00e9 es compilar? \u00bfExplica qu\u00e9 es interpretar?"},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#ventajas-de-los-lenguajes-compilados","text":"Se utilizan cuando la eficiencia es la principal preocupaci\u00f3n El c\u00f3digo ejecutable obtenido es m\u00e1s eficiente y r\u00e1pido Son unidades aut\u00f3nomas listas para ser ejecutadas","title":"Ventajas de los lenguajes compilados."},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#ventajas-de-los-lenguajes-interpretados","text":"El int\u00e9rprete suele estar en varios sistemas operativos, as\u00ed que no tienes que adaptar tu c\u00f3digo a una plataforma en concreto. El c\u00f3digo fuente se interpreta directamente y puede llevarse a diferentes plataformas Esto es una ventaja medias, pero si que lo vemos en entornos web. Los lenguajes interpretados como JavaScript, se ejecutan en el navegador cliente, lo que hace disminuir la carga de trabajo del servidor web.","title":"Ventajas de los lenguajes interpretados."},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#nombra-2-lenguajes-compilados-y-otros-2-interpretados","text":"Compilados C++ Cleo Interpretados JavaScript Python","title":"Nombra 2 lenguajes compilados y otros 2 interpretados."},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#puede-considerarse-codigo-objeto-el-bytecode-generado-en-java-tras-la-compilacion-explica-la-respuesta","text":"Puede considerarse c\u00f3digo objeto pero destinado a la m\u00e1quina virtual de Java en lugar de c\u00f3digo objeto nativo, despu\u00e9s este bytecode se interpreta para ejecutarlo.","title":"\u00bfPuede considerarse c\u00f3digo objeto el bytecode generado en Java tras la compilaci\u00f3n? Explica la respuesta."},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#pon-un-ejemplo-de-lenguaje-de-los-siguientes-tipos","text":"Bajo nivel. Lenguaje de m\u00e1quina Lenguaje ensamblador Nivel medio. C Alto nivel. SQL PHP Python Java Go","title":"Pon un ejemplo de lenguaje de los siguientes tipos:"},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#que-paradigma-de-programacion-siguen-los-siguientes-lenguajes","text":"C: Imperactivo estructurado C++: Imperactivo multiparadigma SQL: Declarativos algebraicos Java: Imperactivos orientado a objeto Javascript: Imperactivo multiparadigma Lisp: Declarativos funcionales Prolog: Declarativos l\u00f3gicos","title":"\u00bfQu\u00e9 paradigma de programaci\u00f3n siguen los siguientes lenguajes?"},{"location":"LENGUAJE%20DE%20PROGRAMACI%C3%93N/#explica-que-criterios-pueden-seguirse-a-la-hora-de-elegir-un-lengua-de-de-programacion-para-el-desarrollo-software","text":"Aplicaci\u00f3n . Si te gusta el desarrollo de juegos, aplicaciones m\u00f3viles o sitios web, los lenguajes que necesitas aprender son totalmente diferentes, algo muy obvio, puesto que los lenguajes de programaci\u00f3n se crean con un prop\u00f3sito en espec\u00edfico. Salario. Existen varios lenguajes por los cuales pagan muy buenos salarios anuales. Por desgracias, por algunos no sucede lo mismo. Sera decisi\u00f3n tuya ver por cual te decantas y que disfrutes trabajar con ese. Geograf\u00eda. Este el tercer criterio que se debe tomar en cuenta al momento de elegir un lenguaje de programaci\u00f3n, ayuda a determinar que tantas personas utilizan ese lenguaje y que en alg\u00fan momento te pueden ayudar, o puedes tomarlo tambi\u00e9n como una oportunidad para destacar en un lenguaje que no sea com\u00fan en esa regi\u00f3n. Popularidad. Este aspecto resulta importantes cuando quieres trabajar como Freelancer. Un lenguaje de programaci\u00f3n tiene que ser suficientemente popular para generar nuevo proyectos en los que puedas trabajar.","title":"Explica qu\u00e9 criterios pueden seguirse a la hora de elegir un lengua de de programaci\u00f3n para el desarrollo software."},{"location":"OPTIMIZACI%C3%93N/","text":"Optimizaci\u00f3n \u00bfQu\u00e9 se entiende por hediondez del c\u00f3digo? Pon al menos 5 ejemplos. En programaci\u00f3n de computadores, la hediondez del c\u00f3digo ( code smell en ingl\u00e9s, o tambi\u00e9n conocido por c\u00f3digo que huele o apesta) es cualquier s\u00edntoma en el c\u00f3digo fuente C\u00f3digo_fuente de un programa que posiblemente indica un problema m\u00e1s profundo. Las hediondeces del c\u00f3digo usualmente no son bug de programaci\u00f3n (errores) -- no son t\u00e9cnicamente incorrectos y en realidad no impiden que el programa funcione correctamente. En cambio, indican deficiencias en el dise\u00f1o de software que puede ralentizar el desarrollo o aumentan el riesgo de errores o fallos en el futuro. C\u00f3digo duplicado: existe c\u00f3digo id\u00e9ntico o muy similar en m\u00e1s de una ubicaci\u00f3n. Clase grande: una clase que ha crecido hasta hacerse demasiado grande. Demasiados par\u00e1metros: una larga lista de par\u00e1metros de un procedimiento o funci\u00f3n empeora la legibilidad y la calidad del c\u00f3digo. Supercallback: callback excesivos. Complejidad artificiosa: Uso forzado de patrones de dise\u00f1o demasiado complicados, donde uno m\u00e1s simple ser\u00eda suficiente. \u00bfQu\u00e9 tipo de herramienta utilizamos para hacer an\u00e1lisis est\u00e1tico del c\u00f3digo? Las herramientas de Parasoft est\u00e1n disponibles para estos lenguajes de programaci\u00f3n. Ejecute an\u00e1lisis est\u00e1tico integr\u00e1ndose estrechamente en su entorno de desarrollo C y C ++ para detectar defectos lo antes posible. \u00bfQu\u00e9 sitios web nos permiten hacer an\u00e1lisis est\u00e1tico del c\u00f3digo o Continuous Inspection? Review Board Crucible Phabricator Collaborator CodeScene Visual Expert Rhodecode Reviewable Veracode Instala en Netbeans el plugin FindBugs, si no lo tienes a\u00fan instalado. Realiza an\u00e1lisis est\u00e1tico de c\u00f3digo para las clases del proyecto miapp . Consulta el siguiente enlace: [an\u00e1lisis est\u00e1tico con FindBugs] Indica al menos un code smell relevante de cada clase. Explica c\u00f3mo podr\u00eda solucionarse. An\u00e1lisis est\u00e1tico (lint) Sin ejecutar el c\u00f3digo, mediante una serie de m\u00e9todos de an\u00e1lisis que se pueden ejecutar sobre el c\u00f3digo fuente de una aplicaci\u00f3n para detectar problemas potenciales. An\u00e1lisis din\u00e1mico (unit tests) Identificar etapas, estados y variable de decisi\u00f3n: Cada etapa debe tener asociada una o m\u00e1s decisiones (problema de optimizaci\u00f3n). \u00bfQu\u00e9 es la refactorizaci\u00f3n? La refactorizaci\u00f3n es una t\u00e9cnica de la ingenier\u00eda de software para reestructurar un c\u00f3digo fuente, alterando su estructura interna sin cambiar su comportamiento externo. \u00bfQu\u00e9 t\u00e9cnicas se utilizan a menudo a la hora de refactorizar? Renombrado de variables Pasar c\u00f3digo duplicado a funciones Eliminaci\u00f3n de c\u00f3digo inalcanzable Eliminaci\u00f3n de c\u00f3digo redundante Eliminaci\u00f3n de c\u00f3digo muerto","title":"TEMA"},{"location":"OPTIMIZACI%C3%93N/#optimizacion","text":"\u00bfQu\u00e9 se entiende por hediondez del c\u00f3digo? Pon al menos 5 ejemplos. En programaci\u00f3n de computadores, la hediondez del c\u00f3digo ( code smell en ingl\u00e9s, o tambi\u00e9n conocido por c\u00f3digo que huele o apesta) es cualquier s\u00edntoma en el c\u00f3digo fuente C\u00f3digo_fuente de un programa que posiblemente indica un problema m\u00e1s profundo. Las hediondeces del c\u00f3digo usualmente no son bug de programaci\u00f3n (errores) -- no son t\u00e9cnicamente incorrectos y en realidad no impiden que el programa funcione correctamente. En cambio, indican deficiencias en el dise\u00f1o de software que puede ralentizar el desarrollo o aumentan el riesgo de errores o fallos en el futuro. C\u00f3digo duplicado: existe c\u00f3digo id\u00e9ntico o muy similar en m\u00e1s de una ubicaci\u00f3n. Clase grande: una clase que ha crecido hasta hacerse demasiado grande. Demasiados par\u00e1metros: una larga lista de par\u00e1metros de un procedimiento o funci\u00f3n empeora la legibilidad y la calidad del c\u00f3digo. Supercallback: callback excesivos. Complejidad artificiosa: Uso forzado de patrones de dise\u00f1o demasiado complicados, donde uno m\u00e1s simple ser\u00eda suficiente. \u00bfQu\u00e9 tipo de herramienta utilizamos para hacer an\u00e1lisis est\u00e1tico del c\u00f3digo? Las herramientas de Parasoft est\u00e1n disponibles para estos lenguajes de programaci\u00f3n. Ejecute an\u00e1lisis est\u00e1tico integr\u00e1ndose estrechamente en su entorno de desarrollo C y C ++ para detectar defectos lo antes posible. \u00bfQu\u00e9 sitios web nos permiten hacer an\u00e1lisis est\u00e1tico del c\u00f3digo o Continuous Inspection? Review Board Crucible Phabricator Collaborator CodeScene Visual Expert Rhodecode Reviewable Veracode Instala en Netbeans el plugin FindBugs, si no lo tienes a\u00fan instalado.","title":"Optimizaci\u00f3n"},{"location":"OPTIMIZACI%C3%93N/#_1","text":"Realiza an\u00e1lisis est\u00e1tico de c\u00f3digo para las clases del proyecto miapp . Consulta el siguiente enlace: [an\u00e1lisis est\u00e1tico con FindBugs] Indica al menos un code smell relevante de cada clase. Explica c\u00f3mo podr\u00eda solucionarse. An\u00e1lisis est\u00e1tico (lint) Sin ejecutar el c\u00f3digo, mediante una serie de m\u00e9todos de an\u00e1lisis que se pueden ejecutar sobre el c\u00f3digo fuente de una aplicaci\u00f3n para detectar problemas potenciales. An\u00e1lisis din\u00e1mico (unit tests) Identificar etapas, estados y variable de decisi\u00f3n: Cada etapa debe tener asociada una o m\u00e1s decisiones (problema de optimizaci\u00f3n). \u00bfQu\u00e9 es la refactorizaci\u00f3n? La refactorizaci\u00f3n es una t\u00e9cnica de la ingenier\u00eda de software para reestructurar un c\u00f3digo fuente, alterando su estructura interna sin cambiar su comportamiento externo. \u00bfQu\u00e9 t\u00e9cnicas se utilizan a menudo a la hora de refactorizar? Renombrado de variables Pasar c\u00f3digo duplicado a funciones Eliminaci\u00f3n de c\u00f3digo inalcanzable Eliminaci\u00f3n de c\u00f3digo redundante Eliminaci\u00f3n de c\u00f3digo muerto","title":""},{"location":"about/","text":"About \u00bfQu\u00e9 entiendes por entorno de desarrollo? Un entorno de desarrollo integrado (IDE) es un sistema de software para el dise\u00f1o de aplicaciones que combina herramientas comunes para desarrolladores en una sola interfaz de usuario gr\u00e1fica (GUI).","title":"about"},{"location":"about/#about","text":"\u00bfQu\u00e9 entiendes por entorno de desarrollo? Un entorno de desarrollo integrado (IDE) es un sistema de software para el dise\u00f1o de aplicaciones que combina herramientas comunes para desarrolladores en una sola interfaz de usuario gr\u00e1fica (GUI).","title":"About"}]}